!function(){"use strict";function AuthenticationService($http,$cookieStore,$rootScope,$state,CONFIG){function Login(username,password,callback){$http.post(CONFIG.baseUrl+"/api/dashboard/authenticate",{username:username,password:password}).then(function(response){console.info("Authentication: login try ok"),callback(response)},function(response){console.warn("Authentication: error on login try"),callback(response)})}function SetCredentials(uid,company_id,first_name,last_name,token,group){console.log("Authentication: asked to set headers (uid: "+uid+", token: "+token+")"),$rootScope.globals={currentUser:{uid:uid,company_id:company_id,first_name:first_name,last_name:last_name,token:token,privGroup:group}},$http.defaults.headers.common.Userid=uid,$http.defaults.headers.common.Token=token,$cookieStore.put("globals",$rootScope.globals),console.log("Authentication: headers set: "+JSON.stringify($http.defaults.headers.common))}function ClearCredentials(){$rootScope.globals={},$cookieStore.remove("globals"),$http.defaults.headers.common.Userid=void 0,$http.defaults.headers.common.Token=void 0}function CheckCredentials(){$state.is("login")||$http({method:"GET",url:CONFIG.baseUrl+"/api/dashboard/verify_user"}).then(function(res){},function(res){console.error("auth error"),$state.go("login")})}var service={};return service.Login=Login,service.SetCredentials=SetCredentials,service.ClearCredentials=ClearCredentials,service.CheckCredentials=CheckCredentials,service}angular.module("sbAdminApp").factory("AuthenticationService",AuthenticationService),AuthenticationService.$inject=["$http","$cookieStore","$rootScope","$state","CONFIG"]}();